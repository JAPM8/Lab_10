

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed May 04 00:57:33 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataCOMMON
   212  0725                     __pidataCOMMON:
   213                           
   214                           ;initializer for _cont_car
   215  0725  3438               	retlw	56
   216  0726  3400               	retlw	0
   217                           
   218                           	psect	idataBANK0
   219  076B                     __pidataBANK0:
   220                           
   221                           ;initializer for _mensaje
   222  076B  3448               	retlw	72
   223  076C  344F               	retlw	79
   224  076D  344C               	retlw	76
   225  076E  3441               	retlw	65
   226  076F  3420               	retlw	32
   227  0770  344D               	retlw	77
   228  0771  3455               	retlw	85
   229  0772  344E               	retlw	78
   230  0773  3444               	retlw	68
   231  0774  344F               	retlw	79
   232  0775  342C               	retlw	44
   233  0776  3420               	retlw	32
   234  0777  3445               	retlw	69
   235  0778  3453               	retlw	83
   236  0779  3454               	retlw	84
   237  077A  3445               	retlw	69
   238  077B  3420               	retlw	32
   239  077C  3445               	retlw	69
   240  077D  3453               	retlw	83
   241  077E  3420               	retlw	32
   242  077F  344D               	retlw	77
   243  0780  3449               	retlw	73
   244  0781  3420               	retlw	32
   245  0782  344C               	retlw	76
   246  0783  3441               	retlw	65
   247  0784  3442               	retlw	66
   248  0785  3420               	retlw	32
   249  0786  343A               	retlw	58
   250  0787  3444               	retlw	68
   251  0788  3420               	retlw	32
   252  0789  343A               	retlw	58
   253  078A  3456               	retlw	86
   254  078B  3420               	retlw	32
   255  078C  340D               	retlw	13
   256  078D  340A               	retlw	10
   257  078E  3450               	retlw	80
   258  078F  3472               	retlw	114
   259  0790  346F               	retlw	111
   260  0791  3466               	retlw	102
   261  0792  3465               	retlw	101
   262  0793  3420               	retlw	32
   263  0794  3470               	retlw	112
   264  0795  34F3               	retlw	243
   265  0796  346E               	retlw	110
   266  0797  3467               	retlw	103
   267  0798  3461               	retlw	97
   268  0799  346D               	retlw	109
   269  079A  3465               	retlw	101
   270  079B  3420               	retlw	32
   271  079C  3431               	retlw	49
   272  079D  3430               	retlw	48
   273  079E  3430               	retlw	48
   274  079F  3420               	retlw	32
   275  07A0  343B               	retlw	59
   276  07A1  3429               	retlw	41
   277  07A2  3400               	retlw	0
   278  0019                     _TXREG	set	25
   279  000C                     _PIR1bits	set	12
   280  0018                     _RCSTAbits	set	24
   281  0008                     _PORTD	set	8
   282  0099                     _SPBRG	set	153
   283  009A                     _SPBRGH	set	154
   284  0098                     _TXSTAbits	set	152
   285  008F                     _OSCCONbits	set	143
   286  0088                     _TRISD	set	136
   287  0187                     _BAUDCTLbits	set	391
   288  0189                     _ANSELH	set	393
   289  0188                     _ANSEL	set	392
   290                           
   291                           	psect	cinit
   292  07E0                     start_initialization:	
   293                           ; #config settings
   294                           
   295  07E0                     __initialization:
   296                           
   297                           ; Initialize objects allocated to BANK0
   298  07E0  1383               	bcf	3,7	;select IRP bank0
   299  07E1  3058               	movlw	low (__pdataBANK0+56)
   300  07E2  00FD               	movwf	btemp+-1
   301  07E3  3007               	movlw	high __pidataBANK0
   302  07E4  00FE               	movwf	btemp
   303  07E5  306B               	movlw	low __pidataBANK0
   304  07E6  00FF               	movwf	btemp+1
   305  07E7  3020               	movlw	low __pdataBANK0
   306  07E8  0084               	movwf	4
   307  07E9  120A  118A  2739  120A  118A  	fcall	init_ram0
   308                           
   309                           ; Initialize objects allocated to COMMON
   310  07EE  120A  118A  2725  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   311  07F3  00F2               	movwf	__pdataCOMMON& (0+127)
   312  07F4  120A  118A  2726  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   313  07F9  00F3               	movwf	(__pdataCOMMON+1)& (0+127)
   314                           
   315                           ; Clear objects allocated to COMMON
   316  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   317  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   318  07FC                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  07FC                     __end_of__initialization:
   322  07FC  0183               	clrf	3
   323  07FD  120A  118A  2F27   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0070                     __pbssCOMMON:
   327  0070                     _i:
   328  0070                     	ds	2
   329                           
   330                           	psect	dataCOMMON
   331  0072                     __pdataCOMMON:
   332  0072                     _cont_car:
   333  0072                     	ds	2
   334                           
   335                           	psect	dataBANK0
   336  0020                     __pdataBANK0:
   337  0020                     _mensaje:
   338  0020                     	ds	56
   339                           
   340                           	psect	inittext
   341  0735                     init_fetch0:	
   342                           ;	Called with low address in FSR and high address in W
   343                           
   344  0735  087E               	movf	btemp,w
   345  0736  008A               	movwf	10
   346  0737  087F               	movf	btemp+1,w
   347  0738  0082               	movwf	2
   348  0739                     init_ram0:	
   349                           ;Called with:
   350                           ;	high address of idata address in btemp 
   351                           ;	low address of idata address in btemp+1 
   352                           ;	low address of data in FSR
   353                           ;	high address + 1 of data in btemp-1
   354                           
   355  0739  120A  118A  2735  120A  118A  	fcall	init_fetch0
   356  073E  0080               	movwf	0
   357  073F  0A84               	incf	4,f
   358  0740  0804               	movf	4,w
   359  0741  067D               	xorwf	btemp+-1,w
   360  0742  1903               	btfsc	3,2
   361  0743  3400               	retlw	0
   362  0744  0AFF               	incf	btemp+1,f
   363  0745  1903               	btfsc	3,2
   364  0746  0AFE               	incf	btemp,f
   365  0747  2F39               	goto	init_ram0
   366                           
   367                           	psect	cstackCOMMON
   368  0074                     __pcstackCOMMON:
   369  0074                     ?_setup:
   370  0074                     ??_setup:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0074                     ?_impresion:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0074                     ??_impresion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0074                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0074                     	ds	2
   385  0076                     ??_main:
   386                           
   387                           	psect	maintext
   388  0727                     __pmaintext:	
   389                           ; 1 bytes @ 0x2
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 56 in file "main_Lab.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : B00/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels required when called: 1
   415 ;; This function calls:
   416 ;;		_impresion
   417 ;;		_setup
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423  0727                     _main:	
   424                           ;psect for function _main
   425                           
   426  0727                     l687:	
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   429                           
   430                           
   431                           ;main_Lab.c: 58:     setup();
   432  0727  120A  118A  2748  120A  118A  	fcall	_setup
   433  072C                     l689:
   434                           
   435                           ;main_Lab.c: 61:         impresion();
   436  072C  120A  118A  27A3  120A  118A  	fcall	_impresion
   437  0731  2F2C               	goto	l689
   438  0732  120A  118A  2800   	ljmp	start
   439  0735                     __end_of_main:
   440                           
   441                           	psect	text1
   442  0748                     __ptext1:	
   443 ;; *************** function _setup *****************
   444 ;; Defined at:
   445 ;;		line 65 in file "main_Lab.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472  0748                     _setup:	
   473                           ;psect for function _setup
   474                           
   475  0748                     l649:	
   476                           ;incstack = 0
   477                           ; Regs used in _setup: [wreg+status,2+status,0]
   478                           
   479                           
   480                           ;main_Lab.c: 66:     ANSEL = 0;
   481  0748  1683               	bsf	3,5	;RP0=1, select bank3
   482  0749  1703               	bsf	3,6	;RP1=1, select bank3
   483  074A  0188               	clrf	8	;volatile
   484                           
   485                           ;main_Lab.c: 67:     ANSELH = 0;
   486  074B  0189               	clrf	9	;volatile
   487                           
   488                           ;main_Lab.c: 69:     TRISD = 0;
   489  074C  1683               	bsf	3,5	;RP0=1, select bank1
   490  074D  1303               	bcf	3,6	;RP1=0, select bank1
   491  074E  0188               	clrf	8	;volatile
   492                           
   493                           ;main_Lab.c: 70:     PORTD = 0;
   494  074F  1283               	bcf	3,5	;RP0=0, select bank0
   495  0750  1303               	bcf	3,6	;RP1=0, select bank0
   496  0751  0188               	clrf	8	;volatile
   497  0752                     l651:
   498                           
   499                           ;main_Lab.c: 72:     OSCCONbits.IRCF = 0b100;
   500  0752  1683               	bsf	3,5	;RP0=1, select bank1
   501  0753  1303               	bcf	3,6	;RP1=0, select bank1
   502  0754  080F               	movf	15,w	;volatile
   503  0755  398F               	andlw	-113
   504  0756  3840               	iorlw	64
   505  0757  008F               	movwf	15	;volatile
   506  0758                     l653:
   507                           
   508                           ;main_Lab.c: 73:     OSCCONbits.SCS = 1;
   509  0758  140F               	bsf	15,0	;volatile
   510  0759                     l655:
   511                           
   512                           ;main_Lab.c: 77:     TXSTAbits.SYNC = 0;
   513  0759  1218               	bcf	24,4	;volatile
   514  075A                     l657:
   515                           
   516                           ;main_Lab.c: 78:     TXSTAbits.BRGH = 1;
   517  075A  1518               	bsf	24,2	;volatile
   518  075B                     l659:
   519                           
   520                           ;main_Lab.c: 79:     BAUDCTLbits.BRG16 = 1;
   521  075B  1683               	bsf	3,5	;RP0=1, select bank3
   522  075C  1703               	bsf	3,6	;RP1=1, select bank3
   523  075D  1587               	bsf	7,3	;volatile
   524  075E                     l661:
   525                           
   526                           ;main_Lab.c: 80:     SPBRGH = 0;
   527  075E  1683               	bsf	3,5	;RP0=1, select bank1
   528  075F  1303               	bcf	3,6	;RP1=0, select bank1
   529  0760  019A               	clrf	26	;volatile
   530  0761                     l663:
   531                           
   532                           ;main_Lab.c: 81:     SPBRG = 25;
   533  0761  3019               	movlw	25
   534  0762  0099               	movwf	25	;volatile
   535  0763                     l665:
   536                           
   537                           ;main_Lab.c: 83:     RCSTAbits.SPEN = 1;
   538  0763  1283               	bcf	3,5	;RP0=0, select bank0
   539  0764  1303               	bcf	3,6	;RP1=0, select bank0
   540  0765  1798               	bsf	24,7	;volatile
   541  0766                     l667:
   542                           
   543                           ;main_Lab.c: 84:     RCSTAbits.RX9 = 0;
   544  0766  1318               	bcf	24,6	;volatile
   545  0767                     l669:
   546                           
   547                           ;main_Lab.c: 86:     TXSTAbits.TXEN = 1;
   548  0767  1683               	bsf	3,5	;RP0=1, select bank1
   549  0768  1303               	bcf	3,6	;RP1=0, select bank1
   550  0769  1698               	bsf	24,5	;volatile
   551  076A                     l47:
   552  076A  0008               	return
   553  076B                     __end_of_setup:
   554                           
   555                           	psect	text2
   556  07A3                     __ptext2:	
   557 ;; *************** function _impresion *****************
   558 ;; Defined at:
   559 ;;		line 91 in file "main_Lab.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          2       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586  07A3                     _impresion:	
   587                           ;psect for function _impresion
   588                           
   589  07A3                     l673:	
   590                           ;incstack = 0
   591                           ; Regs used in _impresion: [wreg-fsr0h+status,2+status,0+btemp+1]
   592                           
   593                           
   594                           ;main_Lab.c: 92:     while(i<=cont_car){
   595  07A3  2FD2               	goto	l685
   596  07A4                     l51:
   597                           
   598                           ;main_Lab.c: 93:         if(PIR1bits.TXIF){
   599  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   600  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   601  07A6  1E0C               	btfss	12,4	;volatile
   602  07A7  2FA9               	goto	u11
   603  07A8  2FAA               	goto	u10
   604  07A9                     u11:
   605  07A9  2FD2               	goto	l685
   606  07AA                     u10:
   607  07AA                     l675:
   608                           
   609                           ;main_Lab.c: 94:             for(i=0; i<=cont_car; i++){
   610  07AA  01F0               	clrf	_i
   611  07AB  01F1               	clrf	_i+1
   612  07AC  2FC4               	goto	l683
   613  07AD                     l677:
   614                           
   615                           ;main_Lab.c: 95:                 _delay((unsigned long)((100)*(1000000/4000.0)));
   616  07AD  3021               	movlw	33
   617  07AE  00F5               	movwf	??_impresion+1
   618  07AF  3076               	movlw	118
   619  07B0  00F4               	movwf	??_impresion
   620  07B1                     u47:
   621  07B1  0BF4               	decfsz	??_impresion,f
   622  07B2  2FB1               	goto	u47
   623  07B3  0BF5               	decfsz	??_impresion+1,f
   624  07B4  2FB1               	goto	u47
   625  07B5  0000               	nop
   626  07B6                     l679:
   627                           
   628                           ;main_Lab.c: 96:                 TXREG = mensaje[i];
   629  07B6  0870               	movf	_i,w
   630  07B7  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   631  07B8  0084               	movwf	4
   632  07B9  1383               	bcf	3,7	;select IRP bank0
   633  07BA  0800               	movf	0,w
   634  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   635  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   636  07BD  0099               	movwf	25	;volatile
   637  07BE                     l681:
   638                           
   639                           ;main_Lab.c: 97:             }
   640  07BE  3001               	movlw	1
   641  07BF  07F0               	addwf	_i,f
   642  07C0  1803               	skipnc
   643  07C1  0AF1               	incf	_i+1,f
   644  07C2  3000               	movlw	0
   645  07C3  07F1               	addwf	_i+1,f
   646  07C4                     l683:
   647  07C4  0871               	movf	_i+1,w
   648  07C5  3A80               	xorlw	128
   649  07C6  00FF               	movwf	btemp+1
   650  07C7  3080               	movlw	128
   651  07C8  027F               	subwf	btemp+1,w
   652  07C9  1D03               	skipz
   653  07CA  2FCD               	goto	u25
   654  07CB  3039               	movlw	57
   655  07CC  0270               	subwf	_i,w
   656  07CD                     u25:
   657  07CD  1C03               	skipc
   658  07CE  2FD0               	goto	u21
   659  07CF  2FD1               	goto	u20
   660  07D0                     u21:
   661  07D0  2FAD               	goto	l677
   662  07D1                     u20:
   663  07D1  2FA3               	goto	l673
   664  07D2                     l685:
   665                           
   666                           ;main_Lab.c: 92:     while(i<=cont_car){
   667  07D2  0871               	movf	_i+1,w
   668  07D3  3A80               	xorlw	128
   669  07D4  00FF               	movwf	btemp+1
   670  07D5  3080               	movlw	128
   671  07D6  027F               	subwf	btemp+1,w
   672  07D7  1D03               	skipz
   673  07D8  2FDB               	goto	u35
   674  07D9  3039               	movlw	57
   675  07DA  0270               	subwf	_i,w
   676  07DB                     u35:
   677  07DB  1C03               	skipc
   678  07DC  2FDE               	goto	u31
   679  07DD  2FDF               	goto	u30
   680  07DE                     u31:
   681  07DE  2FA4               	goto	l51
   682  07DF                     u30:
   683  07DF                     l57:
   684  07DF  0008               	return
   685  07E0                     __end_of_impresion:
   686  007E                     btemp	set	126	;btemp
   687  007E                     wtemp0	set	126
   688                           
   689                           	psect	idloc
   690                           
   691                           ;Config register IDLOC0 @ 0x2000
   692                           ;	unspecified, using default values
   693  2000                     	org	8192
   694  2000  3FFF               	dw	16383
   695                           
   696                           ;Config register IDLOC1 @ 0x2001
   697                           ;	unspecified, using default values
   698  2001                     	org	8193
   699  2001  3FFF               	dw	16383
   700                           
   701                           ;Config register IDLOC2 @ 0x2002
   702                           ;	unspecified, using default values
   703  2002                     	org	8194
   704  2002  3FFF               	dw	16383
   705                           
   706                           ;Config register IDLOC3 @ 0x2003
   707                           ;	unspecified, using default values
   708  2003                     	org	8195
   709  2003  3FFF               	dw	16383
   710                           
   711                           	psect	config
   712                           
   713                           ;Config register CONFIG1 @ 0x2007
   714                           ;	Oscillator Selection bits
   715                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   716                           ;	Watchdog Timer Enable bit
   717                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   718                           ;	Power-up Timer Enable bit
   719                           ;	PWRTE = OFF, PWRT disabled
   720                           ;	RE3/MCLR pin function select bit
   721                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   722                           ;	Code Protection bit
   723                           ;	CP = OFF, Program memory code protection is disabled
   724                           ;	Data Code Protection bit
   725                           ;	CPD = OFF, Data memory code protection is disabled
   726                           ;	Brown Out Reset Selection bits
   727                           ;	BOREN = OFF, BOR disabled
   728                           ;	Internal External Switchover bit
   729                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   730                           ;	Fail-Safe Clock Monitor Enabled bit
   731                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   732                           ;	Low Voltage Programming Enable bit
   733                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   734                           ;	In-Circuit Debugger Mode bit
   735                           ;	DEBUG = 0x1, unprogrammed default
   736  2007                     	org	8199
   737  2007  20D4               	dw	8404
   738                           
   739                           ;Config register CONFIG2 @ 0x2008
   740                           ;	Brown-out Reset Selection bit
   741                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   742                           ;	Flash Program Memory Self Write Enable bits
   743                           ;	WRT = OFF, Write protection off
   744  2008                     	org	8200
   745  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       6
    BANK0            80      0      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_impresion

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _impresion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _impresion                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _impresion
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed May 04 00:57:33 2022

                      _i 0070                        pc 0002                       l51 07A4  
                     l47 076A                       l57 07DF                       u10 07AA  
                     u11 07A9                       u20 07D1                       u21 07D0  
                     u30 07DF                       u31 07DE                       u25 07CD  
                     u35 07DB                       u47 07B1                       fsr 0004  
                    l651 0752                      l661 075E                      l653 0758  
                    l663 0761                      l655 0759                      l681 07BE  
                    l673 07A3                      l665 0763                      l657 075A  
                    l649 0748                      l683 07C4                      l675 07AA  
                    l667 0766                      l659 075B                      l677 07AD  
                    l685 07D2                      l669 0767                      l679 07B6  
                    l687 0727                      l689 072C                      fsr0 0004  
                    indf 0000                     _main 0727                     btemp 007E  
                   start 0000                    ?_main 0074                    _ANSEL 0188  
                  _SPBRG 0099                    _PORTD 0008                    _TRISD 0088  
                  _TXREG 0019                    _setup 0748                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E0  
           __end_of_main 0735                   ??_main 0076                   ?_setup 0074  
                 _ANSELH 0189                   _SPBRGH 009A             __pdataCOMMON 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0074             __pidataBANK0 076B  
          __end_of_setup 076B                  ??_setup 0074               __pmaintext 0727  
                __ptext1 0748                  __ptext2 07A3                  _mensaje 0020  
      __end_of_impresion 07E0     end_of_initialization 07FC                _RCSTAbits 0018  
              _TXSTAbits 0098            __pidataCOMMON 0725              _BAUDCTLbits 0187  
    start_initialization 07E0               init_fetch0 0735              __pdataBANK0 0020  
            __pbssCOMMON 0070                ___latbits 0002                _impresion 07A3  
               _PIR1bits 000C               ?_impresion 0074                 _cont_car 0072  
               init_ram0 0739              ??_impresion 0074               _OSCCONbits 008F  
